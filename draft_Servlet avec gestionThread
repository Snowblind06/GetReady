package com.getready.servlets;

import java.io.IOException;
import com.getready.gestionthread.gestionThread;
import com.getready.userbean.userbean;
import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
/**
 * Servlet implementation class AffichageAvancementPhase
 */


@WebServlet({"/Run"})
public class AffichageAvancementPhase extends HttpServlet {
	private static final long serialVersionUID = 1L;

	
	
    /**
     * Default constructor. 
     */
    public AffichageAvancementPhase() {
   
    }
	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
    
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		//ON CHARGE LA SESSION DEPUIS LA REQUETE-----------------------------------------------------------------------------------------
		HttpSession session = request.getSession();
		
		
		//ON INSTANCIE UN USERBEAN ET LE CONTROLEUR DE THREADS EN LES CHARGEANT DEPUIS LA SESSION-----------------------------------------
		userbean user = (userbean) session.getAttribute("beanUser");
		gestionThread gestionThread = (gestionThread) session.getAttribute("gestionThread");
		
		//ON CHARGE LE USERBEAN AVEC LES GETTERS DU CONTROLEUR DE THREADS------------------------------------------------------------------
		user.setAvancementPhaseBean(gestionThread.getAvancePhase());
		user.setAvancementTotalBean(gestionThread.getAvanceTotal());
		user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
		
		//ON RENVOIE LE USERBEAN ET LE CONTROLEUR DE THREADS DANS LA SESSION APRES MISE A JOUR SI BESOIN DANS LE DOPOST PLUS TARD----------
		session.setAttribute("gestionThread", gestionThread);
		session.setAttribute("beanUser", user);
		
		
		//ON CHARGE LA REQUETE AVEC LES INFOS DU USERBEAN NECESSAIRES A L'AFFICHAGE--------------------------------------------------------
		request.setAttribute("nomphase", user.getPhaseEnCoursBean());
    	request.setAttribute("avancementTotal", user.getAvancementTotalBean());
    	request.setAttribute("avancement", user.getAvancementPhaseBean());
		
    	System.out.println("---------GESTIONTHREAD GETTERS---------PHASE: "+gestionThread.getPhaseEnCours()+"----------AVANCEMENT: "+gestionThread.getAvancePhase());
    	
		this.getServletContext().getRequestDispatcher("/WEB-INF/Run.jsp").forward(request, response);
    	
		
	}
	
	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
	
		//RECUPERATION DE LA SESSION, DU CONTROLEUR DE THREADS ET DU BEAN USER----------------------------------------------------------
		HttpSession session = request.getSession();
		userbean user = (userbean) session.getAttribute("beanUser");
		
		gestionThread gestionThread = (gestionThread) session.getAttribute("gestionThread")	;
		
		
//		//ON INSTANCIE LA LIST DES BEANS DE PHASE DU USER----------------------------------------------------------------------------------
//		List<Bean_Phase> listPhases = tableauActivite.recupererPhase(user);
		
		
		//DEPART ACTIVITE-----------------------------------------------------------------------------------------------------------------
		if(request.getParameter("go") != null) {
			
			gestionThread.setListPhasesGestion(user);
			//LANCEMENT DU THREAD----------------------------------------------------------------------------------------------------------
			gestionThread.startThreads(0);
			
			
			//CHARGEMENT DU BEAN AVEC LES INFOS SUR LE TRAITEMENT FAIT PAR LE THREAD--------------------------------------------------------
			//ON VERIFIE QU'UNE PHASE EST BIEN EN LECTURE AVANT-----------------------------------------------------------------------------
			if(gestionThread.getPhaseEnCours() != null) {
				user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
			
			//VALEUR PAR DEFAUT DE LA STRING PHASE EN COURS--------------------------------------------
			}else {
				user.setPhaseEnCoursBean("-");
			}
			
			//ON CHARGE LES VALEURS ISSUES DU TRAITEMENT DU THREAD DANS LE USERBEAN RECUPERE------------------------------------------------
			user.setAvancementPhaseBean(gestionThread.getAvancePhase());
			user.setAvancementTotalBean(gestionThread.getAvanceTotal());
			
			//ON CHARGE LA SESSION AVEC LE BEAN MIS A JOUR-----------------------------------------------------------------------------------
			session.setAttribute("beanUser", user);
			
			
			//NOTIFICATION UTILISATEUR SUR LE DEBUT DE L'ACTIVITE---------------------------------------------------------------------------
			String messageServlet = "l'activité a commencé!";
			request.setAttribute("messageServlet", messageServlet);
		}
		
		
		
		//ARRET LECTEUR----------------------------------------------------------------------------------------------------------------------
		if(request.getParameter("stop") != null) {

			//arrêtdes threads---------------------------------------------------------------------------------------------------------------
			gestionThread.stopPhaseThread();
			gestionThread.stopTotThread();
			
			
			//CHARGEMENT DU BEAN AVEC LES INFOS SUR LE TRAITEMENT FAIT PAR LE THREAD---------------------------------------------------------------
			if(gestionThread.getPhaseEnCours() != null) {
				user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
				
			}else {
				user.setPhaseEnCoursBean("-");
			}
			
			user.setAvancementPhaseBean(gestionThread.getAvancePhase());
			user.setAvancementTotalBean(gestionThread.getAvanceTotal());
			
			//ON CHARGE LA SESSION AVEC LE BEAN MIS A JOUR--------------------------------------------------------------------------------------------
			session.setAttribute("beanUser", user);
			
			System.out.println("---------GESTIONTHREAD GETTERS---------PHASE: "+gestionThread.getPhaseEnCours()+"----------AVANCEMENT: "+gestionThread.getAvancePhase());
			
			
			//message à retourner sur la jsp------------------------------------------------------------------------------------------------
			String messageServlet = "Activité interrompue";
	
			//chargement de la requ�te------------------------------------------------------------------------------------------------------
			request.setAttribute("messageServlet", messageServlet);	
			}
		
		
		
		//PHASE SUIVANTE---------------------------------------------------------------------------------------------------------------------
		if(request.getParameter("plus") != null) {
			
			gestionThread.phaseChange(+1);
			gestionThread.stopPhaseThread();
			
			//CHARGEMENT DU BEAN AVEC LES INFOS SUR LE TRAITEMENT FAIT PAR LE THREAD---------------------------------------------------------------
			if(gestionThread.getPhaseEnCours() != null) {
				user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
				
			}else {
				user.setPhaseEnCoursBean("-");
			}
			
			user.setAvancementPhaseBean(gestionThread.getAvancePhase());
			user.setAvancementTotalBean(gestionThread.getAvanceTotal());
			
			System.out.println("---------GESTIONTHREAD GETTERS---------PHASE: "+gestionThread.getPhaseEnCours()+"----------AVANCEMENT: "+gestionThread.getAvancePhase());
			//ON CHARGE LA SESSION AVEC LE BEAN MIS A JOUR--------------------------------------------------------------------------------------------
			session.setAttribute("beanUser", user);
			
			
			String messageServlet = "Phase suivante commencée" ;
			
			
			request.setAttribute("messageServlet", messageServlet);
						
			}
		
		
		//PHASE PRECEDENTE----------------------------------------------------------------------------------------------------------------------
		if(request.getParameter("moins") != null) {
			
			
			gestionThread.phaseChange(-1);
			gestionThread.stopPhaseThread();
			
			//CHARGEMENT DU BEAN AVEC LES INFOS SUR LE TRAITEMENT FAIT PAR LE THREAD---------------------------------------------------------------
			if(gestionThread.getPhaseEnCours() != null) {
				user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
				
			}else {
				user.setPhaseEnCoursBean("-");
			}
			
			user.setAvancementPhaseBean(gestionThread.getAvancePhase());
			user.setAvancementTotalBean(gestionThread.getAvanceTotal());
			
			//ON CHARGE LA SESSION AVEC LE BEAN MIS A JOUR--------------------------------------------------------------------------------------------
			session.setAttribute("beanUser", user);
			user.setAvancementPhaseBean(gestionThread.getAvancePhase());
			user.setAvancementTotalBean(gestionThread.getAvanceTotal());
			user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
			
			System.out.println("---------GESTIONTHREAD GETTERS---------PHASE: "+gestionThread.getPhaseEnCours()+"----------AVANCEMENT: "+gestionThread.getAvancePhase());
			
			session.setAttribute("beanUser", user);
			session.setAttribute("gestionThread", gestionThread);
			String messageServlet = "Phase précédente commencée" ;
			
			
			request.setAttribute("messageServlet", messageServlet);

			}
		
		user.setAvancementPhaseBean(gestionThread.getAvancePhase());
		user.setAvancementTotalBean(gestionThread.getAvanceTotal());
		user.setPhaseEnCoursBean(gestionThread.getPhaseEnCours());
		
		System.out.println("---------GESTIONTHREAD GETTERS---------PHASE: "+gestionThread.getPhaseEnCours()+"----------AVANCEMENT: "+gestionThread.getAvancePhase());
		
		session.setAttribute("beanUser", user);
		session.setAttribute("gestionThread", gestionThread);
		
    	request.setAttribute("nomphase", user.getPhaseEnCoursBean());
    	request.setAttribute("avancementTotal", user.getAvancementTotalBean());
    	request.setAttribute("avancement", user.getAvancementPhaseBean());
		
		
		this.getServletContext().getRequestDispatcher("/WEB-INF/Run.jsp").forward(request, response);
	
		
		
	}

}